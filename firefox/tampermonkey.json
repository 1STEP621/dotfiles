{
  "created_by": "Tampermonkey",
  "version": "1",
  "scripts": [
    {
      "name": "AtCoderResultNotifier",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [
            "https://atcoder.jp/*"
          ],
          "orig_matches": [],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690054721936,
        "data": {}
      },
      "enabled": true,
      "position": 1,
      "file_url": "https://greasyfork.org/scripts/371225-atcoderresultnotifier/code/AtCoderResultNotifier.user.js",
      "uuid": "30eb7199-119b-474c-90ef-ca756fb6ca0e",
      "source": ""
    },
    {
      "name": "ac-predictor",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [
            "/^https://atcoder\\.jp/[^#?]*/json/"
          ],
          "orig_includes": [],
          "orig_matches": [
            "https://atcoder.jp/*"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690054721937,
        "data": {}
      },
      "enabled": true,
      "position": 2,
      "file_url": "https://greasyfork.org/scripts/369954-ac-predictor/code/ac-predictor.user.js",
      "uuid": "34f5781e-e9c3-4eb9-bd98-3f3fefca2300",
      "source": ""
    },
    {
      "name": "AtCoderLanguageButtons",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [],
          "orig_matches": [
            "https://atcoder.jp/contests/*/tasks/*",
            "https://atcoder.jp/contests/*/submit*",
            "https://atcoder.jp/contests/*/custom_test*"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1693550282639,
        "data": {
          "config": "s{\"buttons\":[\"4003\",\"4006\",\"4050\"]}"
        }
      },
      "enabled": true,
      "position": 3,
      "file_url": "https://update.greasyfork.org/scripts/421663/AtCoderLanguageButtons.user.js",
      "uuid": "303a2c08-a474-4b78-844e-07c544aaf73c",
      "source": ""
    },
    {
      "name": "AtCoder Easy Test v2",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [],
          "orig_matches": [
            "https://atcoder.jp/contests/*/tasks/*",
            "https://atcoder.jp/contests/*/submit*",
            "https://yukicoder.me/problems/no/*",
            "https://yukicoder.me/problems/*",
            "http://codeforces.com/contest/*/problem/*",
            "http://codeforces.com/gym/*/problem/*",
            "http://codeforces.com/problemset/problem/*",
            "http://codeforces.com/group/*/contest/*/problem/*",
            "http://*.contest.codeforces.com/group/*/contest/*/problem/*",
            "https://codeforces.com/contest/*/problem/*",
            "https://codeforces.com/gym/*/problem/*",
            "https://codeforces.com/problemset/problem/*",
            "https://codeforces.com/group/*/contest/*/problem/*",
            "https://*.contest.codeforces.com/group/*/contest/*/problem/*",
            "https://m1.codeforces.com/contest/*/problem/*",
            "https://m2.codeforces.com/contest/*/problem/*",
            "https://m3.codeforces.com/contest/*/problem/*",
            "https://greasyfork.org/*/scripts/433152-atcoder-easy-test-v2"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1700913675795,
        "data": {
          "config": "s{\"site.atcoder\":\"true\",\"site.yukicoder\":\"true\",\"site.codeforces\":\"true\",\"site.codeforcesMobile\":\"true\",\"version.latest\":\"\\\"2.11.11\\\"\",\"version.lastCheck\":\"1700913675643\",\"version.checkInterval\":\"86400000\",\"langSelection\":\"{}\",\"codeRunner.maxRetry\":\"3\",\"ui.useKeyboardShortcut\":\"true\",\"codeSaver.limit\":\"10\"}"
        }
      },
      "enabled": true,
      "position": 4,
      "file_url": "https://greasyfork.org/scripts/433152-atcoder-easy-test-v2/code/AtCoder%20Easy%20Test%20v2.user.js",
      "uuid": "ccd3f654-2383-49f2-82e7-e8e4ad7d29af",
      "source": ""
    },
    {
      "name": "atcoder-difficulty-display",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [
            "https://atcoder.jp/contests/"
          ],
          "orig_includes": [],
          "orig_matches": [
            "https://atcoder.jp/contests/*",
            "https://atcoder.jp/settings"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690054721945,
        "data": {}
      },
      "enabled": true,
      "position": 5,
      "file_url": "https://greasyfork.org/scripts/397185-atcoder-difficulty-display/code/atcoder-difficulty-display.user.js",
      "uuid": "da11902c-7465-4f1b-8b66-25921a49d376",
      "source": "",
      "requires": [
        {
          "meta": {
            "name": "atcoder-problems-api.js",
            "url": "https://greasyfork.org/scripts/437862-atcoder-problems-api/code/atcoder-problems-api.js?version=1004589",
            "ts": 1690054799338,
            "mimetype": "text/javascript"
          },
          "source": ""
        }
      ]
    },
    {
      "name": "AtCoderPerformanceColorizer",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [
            "https://atcoder.jp/users/*/history*"
          ],
          "orig_matches": [],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690054721957,
        "data": {}
      },
      "enabled": true,
      "position": 6,
      "file_url": "https://greasyfork.org/scripts/371693-atcoderperformancecolorizer/code/AtCoderPerformanceColorizer.user.js",
      "uuid": "85bea486-046b-48f7-9a57-58adb94ac00c",
      "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBdENvZGVyUGVyZm9ybWFuY2VDb2xvcml6ZXIKLy8gQG5hbWVzcGFjZSAgICBodHRwczovL3NhdGFuaWMwMjU4LmdpdGh1Yi5pby8KLy8gQHZlcnNpb24gICAgICAxLjAuNAovLyBAZGVzY3JpcHRpb24gIENvbG9yaXplIHBlcmZvcm1hbmNlIHZhbHVlcyBpbiBBdENvZGVyJ3MgZ3JhZGVib29rLgovLyBAYXV0aG9yICAgICAgIHNhdGFuaWMwMjU4Ci8vIEBpbmNsdWRlICAgICAgaHR0cHM6Ly9hdGNvZGVyLmpwL3VzZXJzLyovaGlzdG9yeSoKLy8gQGdyYW50ICAgICAgICBub25lCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMy4zLjEvanF1ZXJ5Lm1pbi5qcwovLyBAY29weXJpZ2h0ICAgIDIwMjEsIHNhdGFuaWMwMjU4IChodHRwczovL3NhdGFuaWMwMjU4LmdpdGh1Yi5pby8pCi8vIEBsaWNlbnNlICAgICAgTUlUIExpY2Vuc2U7IGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUCi8vID09L1VzZXJTY3JpcHQ9PQoKLypqc2hpbnQgZXN2ZXJzaW9uOiA2ICovCgokKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIC8vIC0tLS0tLS0tLS0tLS0tPjgtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPjgtLS0tLS0tLS0tLS0tLQoKICAgIC8vIOiJsuOBpeOBkeODouODvOODieOBq+OBr+S7peS4i+OBruaVsOWApOOCkuaMh+WumuOBl+OBvuOBmQogICAgLy8gLSAgICAgICAgMCA6IOOBquOBlwogICAgLy8gLSAgICAgICAgMSA6IOaWh+Wtl+OCkuiJsuOBpeOBkQogICAgLy8gLSAgICAgICAgMiA6IOiDjOaZr+OCkuiJsuOBpeOBkQogICAgLy8gLSDjgZ3jgozku6XlpJYgOiDjg4fjg5Xjgqnjg6vjg4joqK3lrpoKCiAgICAvLyDjg5Hjg5Xjgqnjg7zjg57jg7PjgrnlgKTjga7oibLjgaXjgZHjg6Ljg7zjg4kKICAgIGNvbnN0IHBlcmZDb2xvcml6ZU1vZGUgPSAyOwoKICAgIC8vIOODrOODvOODiOWApOOBruiJsuOBpeOBkeODouODvOODiQogICAgY29uc3QgcmF0ZUNvbG9yaXplTW9kZSA9IDI7CgogICAgLy8gLS0tLS0tLS0tLS0tLS04PC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS04PC0tLS0tLS0tLS0tLS0tCgogICAgLy8g6Kqt44G/6L6844G/5YWD44Go5pW05ZCI5oCn44KS5Y+W44KLCiAgICAvLyBodHRwczovL3dpa2kuZ3JlYXNlc3BvdC5uZXQvVGhpcmQtUGFydHlfTGlicmFyaWVzCiAgICB0aGlzLiQgPSB0aGlzLmpRdWVyeSA9IGpRdWVyeS5ub0NvbmZsaWN0KHRydWUpOwoKICAgIC8vIOaWh+Wtl+OBq+iJsuS7mOOBkeOBmeOCiwogICAgZnVuY3Rpb24gY29sb3JpemVDZWxsRm9udChjZWxsLCB2YWx1ZSl7CiAgICAgICAgY2VsbC50ZXh0KCcnKTsKCiAgICAgICAgaWYodmFsdWUgPj0gMzIwMCkgeyAvLyDnjovlhqDjgpLjgaTjgZHjgosKICAgICAgICAgICAgY29uc3QgZmxvb3JWYWx1ZSA9IE1hdGguZmxvb3IodmFsdWUgLyA0MDApICogNDAwOwogICAgICAgICAgICBjZWxsLmFwcGVuZCgnPGltZyBzcmM9Imh0dHBzOi8vaW1nLmF0Y29kZXIuanAvYXNzZXRzL2ljb24vY3Jvd24nICsgZmxvb3JWYWx1ZSArICcuZ2lmIj4gJyk7CiAgICAgICAgfQoKICAgICAgICBsZXQgY29sb3JDbGFzcyA9ICd1c2VyLWJsYWNrJzsgLy8g6buSCiAgICAgICAgLyoqLyBpZih2YWx1ZSA8ICA0MDApIGNvbG9yQ2xhc3MgPSAndXNlci1ncmF5JzsgICAvLyDngbAKICAgICAgICBlbHNlIGlmKHZhbHVlIDwgIDgwMCkgY29sb3JDbGFzcyA9ICd1c2VyLWJyb3duJzsgIC8vIOiMtgogICAgICAgIGVsc2UgaWYodmFsdWUgPCAxMjAwKSBjb2xvckNsYXNzID0gJ3VzZXItZ3JlZW4nOyAgLy8g57eRCiAgICAgICAgZWxzZSBpZih2YWx1ZSA8IDE2MDApIGNvbG9yQ2xhc3MgPSAndXNlci1jeWFuJzsgICAvLyDmsLQKICAgICAgICBlbHNlIGlmKHZhbHVlIDwgMjAwMCkgY29sb3JDbGFzcyA9ICd1c2VyLWJsdWUnOyAgIC8vIOmdkgogICAgICAgIGVsc2UgaWYodmFsdWUgPCAyNDAwKSBjb2xvckNsYXNzID0gJ3VzZXIteWVsbG93JzsgLy8g6buECiAgICAgICAgZWxzZSBpZih2YWx1ZSA8IDI4MDApIGNvbG9yQ2xhc3MgPSAndXNlci1vcmFuZ2UnOyAvLyDmqZkKICAgICAgICBlbHNlIC8qICAgICAgICAgICAgKi8gY29sb3JDbGFzcyA9ICd1c2VyLXJlZCc7ICAgIC8vIOi1pAoKICAgICAgICBjZWxsLmFwcGVuZCgnPHNwYW4gY2xhc3M9IicgKyBjb2xvckNsYXNzICsgJyI+JyArIHZhbHVlICsgJzwvc3Bhbj4nKTsKICAgIH0KCiAgICAvLyDog4zmma/jgavoibLku5jjgZHjgZnjgosKICAgIGZ1bmN0aW9uIGNvbG9yaXplQ2VsbEJhY2tHcm91bmQoY2VsbCwgdmFsdWUpewogICAgICAgIGNlbGwudGV4dCh2YWx1ZSk7CgogICAgICAgIGlmKHZhbHVlIDwgMzIwMCkgewogICAgICAgICAgICBsZXQgY29sb3JDb2RlID0gJyNGRkZGRkYnOyAvLyDnmb0KICAgICAgICAgICAgLyoqLyBpZih2YWx1ZSA8ICA0MDApIGNvbG9yQ29kZSA9ICcjRDlEOUQ5JzsgLy8g54GwCiAgICAgICAgICAgIGVsc2UgaWYodmFsdWUgPCAgODAwKSBjb2xvckNvZGUgPSAnI0Q5QzVCMic7IC8vIOiMtgogICAgICAgICAgICBlbHNlIGlmKHZhbHVlIDwgMTIwMCkgY29sb3JDb2RlID0gJyNCMkQ5QjInOyAvLyDnt5EKICAgICAgICAgICAgZWxzZSBpZih2YWx1ZSA8IDE2MDApIGNvbG9yQ29kZSA9ICcjQjJFQ0VDJzsgLy8g5rC0CiAgICAgICAgICAgIGVsc2UgaWYodmFsdWUgPCAyMDAwKSBjb2xvckNvZGUgPSAnI0IyQjJGRic7IC8vIOmdkgogICAgICAgICAgICBlbHNlIGlmKHZhbHVlIDwgMjQwMCkgY29sb3JDb2RlID0gJyNFQ0VDQjInOyAvLyDpu4QKICAgICAgICAgICAgZWxzZSBpZih2YWx1ZSA8IDI4MDApIGNvbG9yQ29kZSA9ICcjRkZEOUIyJzsgLy8g5qmZCiAgICAgICAgICAgIGVsc2UgLyp2YWx1ZSA8IDMyMDAqLyBjb2xvckNvZGUgPSAnI0ZGQjJCMic7IC8vIOi1pAoKICAgICAgICAgICAgY2VsbC5hdHRyKCdzdHlsZScsICdiYWNrZ3JvdW5kLWNvbG9yOicgKyBjb2xvckNvZGUgKyAnOz4nKTsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZih2YWx1ZSA8IDM2MDApIHsgLy8g6YqACiAgICAgICAgICAgIGNlbGwuYXR0cignc3R5bGUnLCAnYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI0U0RTRFNCwgI0VFRUVFRSwgI0U0RTRFNCwgI0NDQ0NDQywgI0M0QzRDNCk7PicpOwogICAgICAgIH0KICAgICAgICBlbHNlIHsgLy8g6YeRCiAgICAgICAgICAgIGNlbGwuYXR0cignc3R5bGUnLCAnYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI0ZGRDMyNSwgI0ZERUJBNiwgI0ZGRTA2NSwgI0ZGQ0MwMCwgI0YwQkUwMCk7PicpOwogICAgICAgIH0KICAgIH0KCiAgICAvLyDjgrvjg6vjgpJtb2Rl44Gn6Imy44Gl44GRCiAgICBmdW5jdGlvbiBjb2xvcml6ZUNlbGwoY2VsbCwgbW9kZSl7CiAgICAgICAgY29uc3QgdmFsdWUgPSBjZWxsLnRleHQoKTsKICAgICAgICBpZihpc05hTih2YWx1ZSkpIHJldHVybjsKCiAgICAgICAgaWYgKG1vZGUgPT09IDApIHsgLy8g44Gq44GXCiAgICAgICAgICAgIGNlbGwudGV4dCh2YWx1ZSk7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKG1vZGUgPT09IDEpIHsgLy8g5paH5a2X44KS6Imy44Gl44GRCiAgICAgICAgICAgIGNvbG9yaXplQ2VsbEZvbnQoY2VsbCwgdmFsdWUpOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChtb2RlID09PSAyKSB7IC8vIOiDjOaZr+OCkuiJsuOBpeOBkQogICAgICAgICAgICBjb2xvcml6ZUNlbGxCYWNrR3JvdW5kKGNlbGwsIHZhbHVlKTsKICAgICAgICB9CiAgICB9CgogICAgJCgnI2hpc3RvcnknKS5maW5kKCd0Ym9keScpLmZpbmQoJ3RyJykuZWFjaChmdW5jdGlvbihpLCBjb250ZXN0SW5mbykgewogICAgICAgIGNvbnN0IHRkcyA9ICQoY29udGVzdEluZm8pLmZpbmQoJ3RkJyk7CiAgICAgICAgY29sb3JpemVDZWxsKCQodGRzWzNdKSwgcGVyZkNvbG9yaXplTW9kZSk7CiAgICAgICAgY29sb3JpemVDZWxsKCQodGRzWzRdKSwgcmF0ZUNvbG9yaXplTW9kZSk7CiAgICB9KTsKfSk7",
      "requires": [
        {
          "meta": {
            "name": "jquery.min.js",
            "url": "https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js",
            "ts": 1690054721952,
            "mimetype": "text/javascript"
          },
          "source": ""
        }
      ]
    },
    {
      "name": "AtCoder Submission User Colorizer",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [],
          "orig_matches": [
            "https://atcoder.jp/contests/*/submissions*"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690054721959,
        "data": {}
      },
      "enabled": true,
      "position": 7,
      "file_url": "https://greasyfork.org/scripts/397710-atcoder-submission-user-colorizer/code/AtCoder%20Submission%20User%20Colorizer.user.js",
      "uuid": "98ba3db7-2332-4ea0-a901-6b1a1b1d2dd5",
      "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBdENvZGVyIFN1Ym1pc3Npb24gVXNlciBDb2xvcml6ZXIKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAxLjIKLy8gQGRlc2NyaXB0aW9uICDmj5Dlh7rkuIDopqfjga7jg6bjg7zjgrblkI3jgpLoibLku5jjgZHjgZfjgb7jgZkKLy8gQGF1dGhvciAgICAgICBtb3Jpb19wcm9nCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9hdGNvZGVyLmpwL2NvbnRlc3RzLyovc3VibWlzc2lvbnMqCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAbGljZW5zZSAgICAgIENDMAovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vdW5wa2cuY29tL2xzY2FjaGUvbHNjYWNoZS5taW4uanMKLy8gPT0vVXNlclNjcmlwdD09CgokKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwoKICAgIGNvbnN0IGxhc3RVcGRhdGVLZXkgPSAndXNlci1jb2xvcml6ZXItcmFua2luZy1sYXN0LXVwZGF0ZSc7CiAgICBjb25zdCByYW5raW5nS2V5ID0gJ3VzZXItY29sb3JpemVyLXJhbmtpbmcnOwogICAgY29uc3QgT1VUX09GX1JBTksgPSBOdW1iZXIuTUFYX1ZBTFVFOyAgIC8vID4gMTAwCgogICAgZnVuY3Rpb24gZ2V0Q29sb3IocmF0aW5nKSB7CiAgICAgICAgaWYgKHJhdGluZyA+PSAyODAwKSByZXR1cm4gJyNGRjAwMDAnOwogICAgICAgIGlmIChyYXRpbmcgPj0gMjQwMCkgcmV0dXJuICcjRkY4MDAwJzsKICAgICAgICBpZiAocmF0aW5nID49IDIwMDApIHJldHVybiAnI0MwQzAwMCc7CiAgICAgICAgaWYgKHJhdGluZyA+PSAxNjAwKSByZXR1cm4gJyMwMDAwRkYnOwogICAgICAgIGlmIChyYXRpbmcgPj0gMTIwMCkgcmV0dXJuICcjMDBDMEMwJzsKICAgICAgICBpZiAocmF0aW5nID49ICA4MDApIHJldHVybiAnIzAwODAwMCc7CiAgICAgICAgaWYgKHJhdGluZyA+PSAgNDAwKSByZXR1cm4gJyM4MDQwMDAnOwogICAgICAgIGlmIChyYXRpbmcgPiAgICAgMCkgcmV0dXJuICcjODA4MDgwJzsKICAgICAgICByZXR1cm4gJyMwMDAwMDAnOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldENvbG9yQ2xhc3MocmF0aW5nKSB7CiAgICAgICAgaWYgKHJhdGluZyA+PSAyODAwKSByZXR1cm4gJ3VzZXItcmVkJzsKICAgICAgICBpZiAocmF0aW5nID49IDI0MDApIHJldHVybiAndXNlci1vcmFuZ2UnOwogICAgICAgIGlmIChyYXRpbmcgPj0gMjAwMCkgcmV0dXJuICd1c2VyLXllbGxvdyc7CiAgICAgICAgaWYgKHJhdGluZyA+PSAxNjAwKSByZXR1cm4gJ3VzZXItYmx1ZSc7CiAgICAgICAgaWYgKHJhdGluZyA+PSAxMjAwKSByZXR1cm4gJ3VzZXItY3lhbic7CiAgICAgICAgaWYgKHJhdGluZyA+PSAgODAwKSByZXR1cm4gJ3VzZXItZ3JlZW4nOwogICAgICAgIGlmIChyYXRpbmcgPj0gIDQwMCkgcmV0dXJuICd1c2VyLWJyb3duJzsKICAgICAgICBpZiAocmF0aW5nID4gICAgIDApIHJldHVybiAndXNlci1ncmF5JzsKICAgICAgICByZXR1cm4gJ3VzZXItdW5yYXRlZCc7CiAgICB9CgogICAgZnVuY3Rpb24gZ2V0QWNoUmF0ZShyYXRpbmcpIHsKICAgICAgICBjb25zdCBiYXNlID0gTWF0aC5mbG9vcihyYXRpbmcgLyA0MDApICogNDAwOwogICAgICAgIHJldHVybiAoKHJhdGluZyAtIGJhc2UpIC8gNDAwKSAqIDEwMDsKICAgIH0KCiAgICBmdW5jdGlvbiBjb2xvcml6ZSh1LCByYW5raW5nLCByYXRpbmcpIHsKICAgICAgICAvKiAqL2lmIChyYW5raW5nIDw9ICAgMSkgJCh1KS5iZWZvcmUoJzxpbWcgc3R5bGU9InZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IiBzcmM9Ii8vaW1nLmF0Y29kZXIuanAvYXNzZXRzL2ljb24vY3Jvd25fY2hhbXBpb24ucG5nIj4mbmJzcDsnKTsKICAgICAgICBlbHNlIGlmIChyYW5raW5nIDw9ICAxMCkgJCh1KS5iZWZvcmUoJzxpbWcgc3R5bGU9InZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IiBzcmM9Ii8vaW1nLmF0Y29kZXIuanAvYXNzZXRzL2ljb24vY3Jvd25fZ29sZC5wbmciPiZuYnNwOycpOwogICAgICAgIGVsc2UgaWYgKHJhbmtpbmcgPD0gIDMwKSAkKHUpLmJlZm9yZSgnPGltZyBzdHlsZT0idmVydGljYWwtYWxpZ246IG1pZGRsZTsiIHNyYz0iLy9pbWcuYXRjb2Rlci5qcC9hc3NldHMvaWNvbi9jcm93bl9zaWx2ZXIucG5nIj4mbmJzcDsnKTsKICAgICAgICBlbHNlIGlmIChyYW5raW5nIDw9IDEwMCkgJCh1KS5iZWZvcmUoJzxpbWcgc3R5bGU9InZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IiBzcmM9Ii8vaW1nLmF0Y29kZXIuanAvYXNzZXRzL2ljb24vY3Jvd25fYnJvbnplLnBuZyI+Jm5ic3A7Jyk7CiAgICAgICAgZWxzZSBpZiAocmF0aW5nID4gMCkgewogICAgICAgICAgICBjb25zdCBjb2xvciA9IGdldENvbG9yKHJhdGluZyk7CiAgICAgICAgICAgIGNvbnN0IGFjaFJhdGUgPSBnZXRBY2hSYXRlKHJhdGluZyk7CiAgICAgICAgICAgICQodSkuYmVmb3JlKGAKICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSIKICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMnB4OwogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMnB4OwogICAgICAgICAgICAgICAgICAgIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7CiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgICAgICAgICAgICAgICAgIGJvcmRlcjogc29saWQgMXB4ICR7Y29sb3J9OwogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KAogICAgICAgICAgICAgICAgICAgICAgICBib3R0b20sCiAgICAgICAgICAgICAgICAgICAgICAgICR7Y29sb3J9IDAlLAogICAgICAgICAgICAgICAgICAgICAgICAke2NvbG9yfSAke2FjaFJhdGV9JSwKICAgICAgICAgICAgICAgICAgICAgICAgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjApICR7YWNoUmF0ZX0lLAogICAgICAgICAgICAgICAgICAgICAgICByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMCkgMTAwJSk7CiAgICAgICAgICAgICAgICAiPjwvc3Bhbj4KICAgICAgICAgICAgYCk7CiAgICAgICAgfQogICAgICAgICQodSkuYWRkQ2xhc3MoZ2V0Q29sb3JDbGFzcyhyYXRpbmcpKTsKICAgIH0KCiAgICBmdW5jdGlvbiBnZXRSYW5raW5nTWFwKCkgewogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihjYWxsYmFjaykgewogICAgICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICAgICAgICBjb25zdCBsYXN0VXBkYXRlVGltZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxhc3RVcGRhdGVLZXkpOwogICAgICAgICAgICAvLyBVcGRhdGUgZXZlcnkgMyBob3VycwogICAgICAgICAgICBpZiAobGFzdFVwZGF0ZVRpbWUgJiYgY3VycmVudFRpbWUgPCBOdW1iZXIobGFzdFVwZGF0ZVRpbWUpICsgMyAqIDYwICogNjAgKiAxMDAwKSB7CiAgICAgICAgICAgICAgICBjYWxsYmFjayhKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKHJhbmtpbmdLZXkpKSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBsZXQgcmFua2luZyA9IHt9OwogICAgICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgICAgICB1cmw6ICJodHRwczovL2F0Y29kZXIuanAvcmFua2luZyIsCiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ0dFVCcsCiAgICAgICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdodG1sJwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5kb25lKGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAkKCQucGFyc2VIVE1MKGRhdGEpKS5maW5kKCcudXNlcm5hbWUgPiBzcGFuJykuZWFjaChmdW5jdGlvbihpZHgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSAkKHRoaXMpLnRleHQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgcmFua2luZ1t1c2VyTmFtZV0gPSBpZHggKyAxOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGxhc3RVcGRhdGVLZXksIGN1cnJlbnRUaW1lKTsKICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShyYW5raW5nS2V5LCBKU09OLnN0cmluZ2lmeShyYW5raW5nKSk7CiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2socmFua2luZyk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfQoKICAgIGZ1bmN0aW9uIGdldFJhbmtpbmcocmFua2luZ01hcCwgdXNlck5hbWUpIHsKICAgICAgICBpZiAodXNlck5hbWUgaW4gcmFua2luZ01hcCkgcmV0dXJuIHJhbmtpbmdNYXBbdXNlck5hbWVdOwogICAgICAgIHJldHVybiBPVVRfT0ZfUkFOSzsKICAgIH0KCiAgICBsc2NhY2hlLmZsdXNoRXhwaXJlZCgpOwogICAgZ2V0UmFua2luZ01hcCgpLnRoZW4oKHJhbmtpbmdNYXApID0+IHsKICAgICAgICAkKCdhW2hyZWYqPSIvdXNlcnMiXScpLmVhY2goZnVuY3Rpb24oXywgdSkgewogICAgICAgICAgICAvLyBTa2lwICJNeSBQcm9maWxlIgogICAgICAgICAgICBpZiAoJCh1KS5maW5kKCdzcGFuJykubGVuZ3RoKSByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgY29uc3QgdXNlck5hbWUgPSAkKHRoaXMpLmF0dHIoJ2hyZWYnKS5zbGljZSg3KTsKICAgICAgICAgICAgY29uc3QgbHNrZXkgPSAicmF0aW5nLSIgKyB1c2VyTmFtZTsKICAgICAgICAgICAgY29uc3QgcmFua2luZyA9IGdldFJhbmtpbmcocmFua2luZ01hcCwgdXNlck5hbWUpOwogICAgICAgICAgICBsZXQgcmF0aW5nID0gbHNjYWNoZS5nZXQobHNrZXkpOwogICAgICAgICAgICBpZiAocmF0aW5nID09PSBudWxsKSB7CiAgICAgICAgICAgICAgICAkLmFqYXgoewogICAgICAgICAgICAgICAgICAgIHVybDogImh0dHBzOi8vYXRjb2Rlci5qcCIgKyAkKHRoaXMpLmF0dHIoJ2hyZWYnKSArICIvaGlzdG9yeS9qc29uIiwKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnR0VUJywKICAgICAgICAgICAgICAgICAgICBkYXRhVHlwZTogJ2pzb24nCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmRvbmUoZnVuY3Rpb24oZGF0YSkgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IHJhdGVkQ291bnQgPSBkYXRhLmxlbmd0aDsKICAgICAgICAgICAgICAgICAgICBpZiAocmF0ZWRDb3VudCA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJhdGluZyA9IDA7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmF0aW5nID0gZGF0YVtyYXRlZENvdW50IC0gMV1bIk5ld1JhdGluZyJdOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvLyBVcGRhdGUgZXZlcnkgMyBob3VycwogICAgICAgICAgICAgICAgICAgIGxzY2FjaGUuc2V0KGxza2V5LCByYXRpbmcsIDMgKiA2MCk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgY29sb3JpemUodSwgcmFua2luZywgcmF0aW5nKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgY29sb3JpemUodSwgcmFua2luZywgcmF0aW5nKTsKICAgICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSk7Cgp9KTsK",
      "requires": [
        {
          "meta": {
            "name": "lscache.min.js",
            "url": "https://unpkg.com/lscache/lscache.min.js",
            "ts": 1690054721958,
            "mimetype": "text/javascript"
          },
          "source": "IWZ1bmN0aW9uKGEsYil7ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sYik6InVuZGVmaW5lZCIhPXR5cGVvZiBtb2R1bGUmJm1vZHVsZS5leHBvcnRzP21vZHVsZS5leHBvcnRzPWIoKTphLmxzY2FjaGU9YigpfSh0aGlzLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe3ZhciBhPSJfX2xzY2FjaGV0ZXN0X18iLGM9YTtpZih2b2lkIDAhPT1vKXJldHVybiBvO3RyeXtpZighbG9jYWxTdG9yYWdlKXJldHVybiExfWNhdGNoKGEpe3JldHVybiExfXRyeXtoKGEsYyksaShhKSxvPSEwfWNhdGNoKGEpe289ISghYihhKXx8IWxvY2FsU3RvcmFnZS5sZW5ndGgpfXJldHVybiBvfWZ1bmN0aW9uIGIoYSl7cmV0dXJuIGEmJigiUVVPVEFfRVhDRUVERURfRVJSIj09PWEubmFtZXx8Ik5TX0VSUk9SX0RPTV9RVU9UQV9SRUFDSEVEIj09PWEubmFtZXx8IlF1b3RhRXhjZWVkZWRFcnJvciI9PT1hLm5hbWUpfWZ1bmN0aW9uIGMoKXtyZXR1cm4gdm9pZCAwPT09cCYmKHA9bnVsbCE9d2luZG93LkpTT04pLHB9ZnVuY3Rpb24gZChhKXtyZXR1cm4gYS5yZXBsYWNlKC9bW1xde30oKSorPy5cXF4kfF0vZywiXFwkJiIpfWZ1bmN0aW9uIGUoYSl7cmV0dXJuIGErcn1mdW5jdGlvbiBmKCl7cmV0dXJuIE1hdGguZmxvb3IoKG5ldyBEYXRlKS5nZXRUaW1lKCkvdCl9ZnVuY3Rpb24gZyhhKXtyZXR1cm4gbG9jYWxTdG9yYWdlLmdldEl0ZW0ocSt2K2EpfWZ1bmN0aW9uIGgoYSxiKXtsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShxK3YrYSksbG9jYWxTdG9yYWdlLnNldEl0ZW0ocSt2K2EsYil9ZnVuY3Rpb24gaShhKXtsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShxK3YrYSl9ZnVuY3Rpb24gaihhKXt2YXIgYixjLGY9bmV3IFJlZ0V4cCgiXiIrcStkKHYpKyIoLiopIiksZz1bXTtmb3IoYz0wO2M8bG9jYWxTdG9yYWdlLmxlbmd0aDtjKyspYj1sb2NhbFN0b3JhZ2Uua2V5KGMpLGI9YiYmYi5tYXRjaChmKSxiPWImJmJbMV0sYiYmYi5pbmRleE9mKHIpPDAmJmcucHVzaChiKTtmb3IoYz0wO2M8Zy5sZW5ndGg7YysrKWEoZ1tjXSxlKGdbY10pKX1mdW5jdGlvbiBrKGEpe3ZhciBiPWUoYSk7aShhKSxpKGIpfWZ1bmN0aW9uIGwoYSl7dmFyIGI9ZShhKSxjPWcoYik7aWYoYyl7dmFyIGQ9cGFyc2VJbnQoYyxzKTtpZihmKCk+PWQpcmV0dXJuIGkoYSksaShiKSwhMH19ZnVuY3Rpb24gbShhLGIpe3cmJiJjb25zb2xlImluIHdpbmRvdyYmImZ1bmN0aW9uIj09dHlwZW9mIHdpbmRvdy5jb25zb2xlLndhcm4mJih3aW5kb3cuY29uc29sZS53YXJuKCJsc2NhY2hlIC0gIithKSxiJiZ3aW5kb3cuY29uc29sZS53YXJuKCJsc2NhY2hlIC0gVGhlIGVycm9yIHdhczogIitiLm1lc3NhZ2UpKX1mdW5jdGlvbiBuKGEpe3JldHVybiBNYXRoLmZsb29yKDg2NGUxMy9hKX12YXIgbyxwLHE9ImxzY2FjaGUtIixyPSItY2FjaGVleHBpcmF0aW9uIixzPTEwLHQ9NmU0LHU9bih0KSx2PSIiLHc9ITEseD17c2V0OmZ1bmN0aW9uKGQsbCxuKXtpZighYSgpKXJldHVybiExO2lmKCFjKCkpcmV0dXJuITE7dHJ5e2w9SlNPTi5zdHJpbmdpZnkobCl9Y2F0Y2goYSl7cmV0dXJuITF9dHJ5e2goZCxsKX1jYXRjaChhKXtpZighYihhKSlyZXR1cm4gbSgiQ291bGQgbm90IGFkZCBpdGVtIHdpdGgga2V5ICciK2QrIiciLGEpLCExO3ZhciBvLHA9W107aihmdW5jdGlvbihhLGIpe3ZhciBjPWcoYik7Yz1jP3BhcnNlSW50KGMscyk6dSxwLnB1c2goe2tleTphLHNpemU6KGcoYSl8fCIiKS5sZW5ndGgsZXhwaXJhdGlvbjpjfSl9KSxwLnNvcnQoZnVuY3Rpb24oYSxiKXtyZXR1cm4gYi5leHBpcmF0aW9uLWEuZXhwaXJhdGlvbn0pO2Zvcih2YXIgcT0obHx8IiIpLmxlbmd0aDtwLmxlbmd0aCYmcT4wOylvPXAucG9wKCksbSgiQ2FjaGUgaXMgZnVsbCwgcmVtb3ZpbmcgaXRlbSB3aXRoIGtleSAnIitvLmtleSsiJyIpLGsoby5rZXkpLHEtPW8uc2l6ZTt0cnl7aChkLGwpfWNhdGNoKGEpe3JldHVybiBtKCJDb3VsZCBub3QgYWRkIGl0ZW0gd2l0aCBrZXkgJyIrZCsiJywgcGVyaGFwcyBpdCdzIHRvbyBiaWc/IixhKSwhMX19cmV0dXJuIG4/aChlKGQpLChmKCkrbikudG9TdHJpbmcocykpOmkoZShkKSksITB9LGdldDpmdW5jdGlvbihiKXtpZighYSgpKXJldHVybiBudWxsO2lmKGwoYikpcmV0dXJuIG51bGw7dmFyIGQ9ZyhiKTtpZighZHx8IWMoKSlyZXR1cm4gZDt0cnl7cmV0dXJuIEpTT04ucGFyc2UoZCl9Y2F0Y2goYSl7cmV0dXJuIGR9fSxyZW1vdmU6ZnVuY3Rpb24oYil7YSgpJiZrKGIpfSxzdXBwb3J0ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gYSgpfSxmbHVzaDpmdW5jdGlvbigpe2EoKSYmaihmdW5jdGlvbihhKXtrKGEpfSl9LGZsdXNoRXhwaXJlZDpmdW5jdGlvbigpe2EoKSYmaihmdW5jdGlvbihhKXtsKGEpfSl9LHNldEJ1Y2tldDpmdW5jdGlvbihhKXt2PWF9LHJlc2V0QnVja2V0OmZ1bmN0aW9uKCl7dj0iIn0sZ2V0RXhwaXJ5TWlsbGlzZWNvbmRzOmZ1bmN0aW9uKCl7cmV0dXJuIHR9LHNldEV4cGlyeU1pbGxpc2Vjb25kczpmdW5jdGlvbihhKXt0PWEsdT1uKHQpfSxlbmFibGVXYXJuaW5nczpmdW5jdGlvbihhKXt3PWF9fTtyZXR1cm4geH0pOw=="
        }
      ]
    },
    {
      "name": "Time Limit Emphasizer",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [
            "https://atcoder.jp/contests/*/tasks/*"
          ],
          "orig_matches": [],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690118362930,
        "data": {}
      },
      "enabled": true,
      "position": 8,
      "file_url": "https://greasyfork.org/scripts/406381-time-limit-emphasizer/code/Time%20Limit%20Emphasizer.user.js",
      "uuid": "7182c03a-c080-4ff4-a399-0401c5cedf6b",
      "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIFRpbWUgTGltaXQgRW1waGFzaXplcgovLyBAbmFtZXNwYWNlICAgaHR0cHM6Ly9naXRodWIuY29tL09ndHNuOTkKLy8gQHZlcnNpb24gICAgICAxLjIKLy8gQGRlc2NyaXB0aW9uIEF0Q29kZXLjgafllY/poYzjga7lrp/ooYzmmYLplpPliLbpmZDjgYwyIHNlY+OBp+OBquOBhOWgtOWQiOOBq+OBoeOCh+OBo+OBqOS4u+W8teOCkua/gOOBl+OBj+OBmeOCi+OAggovLyBAaW5jbHVkZSAgICAgaHR0cHM6Ly9hdGNvZGVyLmpwL2NvbnRlc3RzLyovdGFza3MvKgovLyBAYXV0aGVyIE9ndHNuOTkKLy8gPT0vVXNlclNjcmlwdD09CnZhciBwVGFncyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJwIik7CnZhciBsZW5ndGggPSBwVGFncy5sZW5ndGg7CmZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHsKICBpZiAocFRhZ3NbaV0udGV4dENvbnRlbnQubWF0Y2goL+Wun+ihjOaZgumWk+WItumZkDouKuODoeODouODquWItumZkDouKi8pKSB7CiAgICB2YXIgc3RyID0gcFRhZ3NbaV0udGV4dENvbnRlbnQuc3BsaXQoJyAnKTsKICAgIGlmKHN0clsxXSAhPT0gJzInKXsKICAgICAgICBwVGFnc1tpXS5pbm5lckhUTUwgPSBzdHJbMF0gKyAnPHNwYW4gc3R5bGU9ImNvbG9yOiByZWQ7IGZvbnQtc2l6ZTogMjhweDsgIj4gJyArIHN0clsxXSArICc8L3NwYW4+JyArICcgJyArIHN0clsyXSArICcgJyArIHN0clszXSArICcgJyArIHN0cls0XSArICcgJyArIHN0cls1XSArICcgJyArIHN0cls2XTsKICAgIH0KICAgIGJyZWFrOwogIH0KfQ=="
    },
    {
      "name": "View All Editorials",
      "options": {
        "check_for_updates": true,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [],
          "orig_matches": [
            "https://atcoder.jp/contests/*/editorial",
            "https://atcoder.jp/contests/*/editorial?*"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690118418655,
        "data": {}
      },
      "enabled": true,
      "position": 9,
      "file_url": "https://greasyfork.org/scripts/416554-view-all-editorials/code/View%20All%20Editorials.user.js",
      "uuid": "96cbffa7-91ed-4100-bbf1-9da0716190d4",
      "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICBWaWV3IEFsbCBFZGl0b3JpYWxzCi8vIEBuYW1lOmphICAgICAgICAg6Kej6Kqs44Gc44KT44G26KaL44KLCi8vIEBkZXNjcmlwdGlvbiAgICAgVmlldyBhbGwgZWRpdG9yaWFscyBvZiB0aGUgQXRDb2RlciBjb250ZXN0IGluIG9uZSBwYWdlLgovLyBAZGVzY3JpcHRpb246amEgIEF0Q29kZXLjgrPjg7Pjg4bjgrnjg4jjga7op6Poqqzjg5rjg7zjgrjjgavjgIHjgZnjgbnjgabjga7llY/poYzjga7op6PoqqzjgpLjgb7jgajjgoHjgabooajnpLrjgZfjgb7jgZnjgIIKLy8gQHZlcnNpb24gICAgICAgICAxLjUuMAovLyBAaWNvbiAgICAgICAgICAgIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/ZG9tYWluPWF0Y29kZXIuanAKLy8gQG1hdGNoICAgICAgICAgICBodHRwczovL2F0Y29kZXIuanAvY29udGVzdHMvKi9lZGl0b3JpYWwKLy8gQG1hdGNoICAgICAgICAgICBodHRwczovL2F0Y29kZXIuanAvY29udGVzdHMvKi9lZGl0b3JpYWw/KgovLyBAZ3JhbnQgICAgICAgICAgIEdNX2FkZFN0eWxlCi8vIEByZXF1aXJlICAgICAgICAgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9rYXRleEAwLjE2LjIvZGlzdC9rYXRleC5taW4uanMKLy8gQHJlcXVpcmUgICAgICAgICBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2thdGV4QDAuMTYuMi9kaXN0L2NvbnRyaWIvYXV0by1yZW5kZXIubWluLmpzCi8vIEByZXF1aXJlICAgICAgICAgaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS90aW1lYWdvQDEuNi43L2pxdWVyeS50aW1lYWdvLm1pbi5qcwovLyBAbmFtZXNwYWNlICAgICAgIGh0dHBzOi8vZ2l0bGFiLmNvbS93MG1iYXQvdXNlci1zY3JpcHRzCi8vIEBhdXRob3IgICAgICAgICAgdzBtYmF0Ci8vID09L1VzZXJTY3JpcHQ9PQoKKGFzeW5jIGZ1bmN0aW9uICgpIHsKICAndXNlIHN0cmljdCc7CiAgY29uc29sZS5sb2coYPCfkLsgIlZpZXcgQWxsIEVkaXRvcmlhbHMiIGluaXRpYWxpemluZy4uLiDwn5C7YCkKCiAgLy8gVXRpbHMKICBjb25zdCBhcHBlbmRIZWFkQ2hpbGQgPSAodGFnTmFtZSwgb3B0aW9ucykgPT4KICAgIE9iamVjdC5hc3NpZ24oZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpKSwgb3B0aW9ucyk7CiAgY29uc3QgYWRkU2NyaXB0ID0gKHNyYykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgIGFwcGVuZEhlYWRDaGlsZCgnc2NyaXB0JywgeyBzcmMsIHR5cGU6ICd0ZXh0L2phdmFzY3JpcHQnLCBvbmxvYWQ6IHJlc29sdmUgfSk7CiAgfSk7CiAgY29uc3QgYWRkU3R5bGVTaGVldCA9IChzcmMpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBhcHBlbmRIZWFkQ2hpbGQoJ2xpbmsnLCB7IHJlbDogJ3N0eWxlc2hlZXQnLCBocmVmOiBzcmMsIG9ubG9hZDogcmVzb2x2ZSB9KTsKICB9KTsKICBjb25zdCBzbGVlcCA9IGFzeW5jIChtcykgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTsKCiAgLy8gS2FUZVgKICBjb25zdCBsb2FkS2FUZVggPSBhc3luYyAoKSA9PgogICAgYXdhaXQgYWRkU3R5bGVTaGVldCgiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS9rYXRleEAwLjE2LjIvZGlzdC9rYXRleC5taW4uY3NzIik7CiAgY29uc3Qga2FUZXhPcHRpb25zID0gewogICAgZGVsaW1pdGVyczogWwogICAgICB7IGxlZnQ6ICIkJCIsIHJpZ2h0OiAiJCQiLCBkaXNwbGF5OiB0cnVlIH0sCiAgICAgIHsgbGVmdDogIiQiLCByaWdodDogIiQiLCBkaXNwbGF5OiBmYWxzZSB9LAogICAgICB7IGxlZnQ6ICJcXCgiLCByaWdodDogIlxcKSIsIGRpc3BsYXk6IGZhbHNlIH0sCiAgICAgIHsgbGVmdDogIlxcWyIsIHJpZ2h0OiAiXFxdIiwgZGlzcGxheTogdHJ1ZSB9CiAgICBdLAogICAgaWdub3JlZFRhZ3M6IFsic2NyaXB0IiwgIm5vc2NyaXB0IiwgInN0eWxlIiwgInRleHRhcmVhIiwgImNvZGUiLCAib3B0aW9uIl0sCiAgICBpZ25vcmVkQ2xhc3NlczogWyJwcmV0dHlwcmludCIsICJzb3VyY2UtY29kZS1mb3ItY29weSJdLAogICAgdGhyb3dPbkVycm9yOiBmYWxzZQogIH07CiAgY29uc3QgcmVuZGVyS2FUZVggPSAocm9vdERvbSkgPT4gewogICAgLyogZ2xvYmFsIHJlbmRlck1hdGhJbkVsZW1lbnQgKi8KICAgIHJlbmRlck1hdGhJbkVsZW1lbnQgJiYgcmVuZGVyTWF0aEluRWxlbWVudChyb290RG9tLCBrYVRleE9wdGlvbnMpOwogIH07CgogIC8vIGNvZGUtcHJldHRpZnkKICBjb25zdCBsb2FkUHJldHRpZmllciA9IGFzeW5jICgpID0+IHsKICAgIGF3YWl0IGFkZFNjcmlwdCgiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2dvb2dsZS9jb2RlLXByZXR0aWZ5QG1hc3Rlci9sb2FkZXIvcnVuX3ByZXR0aWZ5LmpzP2F1dG9ydW49ZmFsc2UiKTsKICB9OwogIC8qIGdsb2JhbCBQUiAqLwogIGNvbnN0IHJ1blByZXR0aWZpZXIgPSAoKSA9PiBQUi5wcmV0dHlQcmludCgpOwoKICAvLyBqUXVlcnkgVGltZUFnbwogIGNvbnN0IGxvYWRUaW1lQWdvID0gYXN5bmMgKCkgPT4gewogICAgLyogZ2xvYmFsIExBTkcgKi8KICAgIGlmIChMQU5HID09ICdqYScpIGF3YWl0IGFkZFNjcmlwdCgiaHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L25wbS90aW1lYWdvQDEuNi43L2xvY2FsZXMvanF1ZXJ5LnRpbWVhZ28uamEubWluLmpzIik7CiAgfTsKICBjb25zdCByZW5kZXJUaW1lQWdvID0gKCkgPT4gewogICAgLyogZ2xvYmFsICQgKi8KICAgICQoInRpbWUudGltZWFnbyIpLnRpbWVhZ28oKTsKICAgICQoJy50b29sdGlwLXVuaXgnKS5lYWNoKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHVuaXggPSBwYXJzZUludCgkKHRoaXMpLmF0dHIoJ3RpdGxlJyksIDEwKTsKICAgICAgaWYgKDE0MDAwMDAwMDAgPD0gdW5peCAmJiB1bml4IDw9IDUwMDAwMDAwMDApIHsKICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKHVuaXggKiAxMDAwKTsKICAgICAgICAkKHRoaXMpLmF0dHIoJ3RpdGxlJywgZGF0ZS50b0xvY2FsZVN0cmluZygpKTsKICAgICAgfQogICAgfSk7CiAgICAkKCdbZGF0YS10b2dnbGU9InRvb2x0aXAiXScpLnRvb2x0aXAoKTsKICB9OwoKICAvLyBFZGl0b3JpYWxzIExvYWRlcgogIGNvbnN0IGVkaXRvcmlhbEJvZHlRdWVyeSA9ICIjbWFpbi1jb250YWluZXIgPiBkaXYucm93ID4gZGl2Om50aC1jaGlsZCgyKSI7CiAgY29uc3Qgc2NyYXBlID0gKGRvYykgPT4gWwogICAgZG9jLnF1ZXJ5U2VsZWN0b3IoYCR7ZWRpdG9yaWFsQm9keVF1ZXJ5fSA+IGRpdjpudGgtb2YtdHlwZSgxKWApLAogICAgZG9jLnF1ZXJ5U2VsZWN0b3IoYCR7ZWRpdG9yaWFsQm9keVF1ZXJ5fSA+IGRpdjpudGgtb2YtdHlwZSgyKWApLAogIF07CiAgY29uc3QgZmV0Y2hFZGl0b3JpYWwgPSBhc3luYyAobGluaykgPT4gewogICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChsaW5rLmhyZWYpOwogICAgaWYgKCFyZXNwb25zZS5vaykgdGhyb3cgIkZldGNoIGZhaWxlZCI7CiAgICBjb25zdCBbY29udGVudCwgaGlzdG9yeV0gPSBzY3JhcGUobmV3IERPTVBhcnNlcigpLnBhcnNlRnJvbVN0cmluZyhhd2FpdCByZXNwb25zZS50ZXh0KCksICd0ZXh0L2h0bWwnKSk7CiAgICBpZiAoIWNvbnRlbnQpIHRocm93ICJTY3JhcGluZyBmYWlsZWQiOwogICAgcmV0dXJuIFtjb250ZW50LCBoaXN0b3J5XTsKICB9OwogIGNvbnN0IHJlbmRlckVkaXRvcmlhbCA9IChsaW5rLCBjb250ZW50LCBoaXN0b3J5KSA9PiB7CiAgICBjb25zdCBkaXYgPSBsaW5rLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpOwogICAgZGl2LmNsYXNzTGlzdC5hZGQoJ/CfkLstZWRpdG9yaWFsLWNvbnRlbnQnKTsKICAgIGRpdi5hcHBlbmRDaGlsZChjb250ZW50KTsKICAgIGlmIChoaXN0b3J5KSBkaXYuYXBwZW5kQ2hpbGQoaGlzdG9yeSk7CiAgICByZW5kZXJLYVRlWChkaXYpOwogICAgcmVuZGVyVGltZUFnbygpOwogICAgcnVuUHJldHRpZmllcigpOwogIH07CiAgY29uc3QgbG9hZEVkaXRvcmlhbCA9IGFzeW5jIChsaW5rKSA9PiB7CiAgICBjb25zdCBbY29udGVudCwgaGlzdG9yeV0gPSBhd2FpdCBmZXRjaEVkaXRvcmlhbChsaW5rKTsKICAgIHJlbmRlckVkaXRvcmlhbChsaW5rLCBjb250ZW50LCBoaXN0b3J5KTsKICB9OwoKICAvLyBMYXp5IExvYWRpbmcKICBjb25zdCBUaW1lciA9IChjYWxsYmFjaywgaW50ZXJ2YWwpID0+IHsKICAgIGxldCBpZCA9IHVuZGVmaW5lZDsKICAgIHJldHVybiB7CiAgICAgIHN0YXJ0OiAoKSA9PiB7CiAgICAgICAgaWYgKGlkKSByZXR1cm47CiAgICAgICAgY2FsbGJhY2soKTsKICAgICAgICBpZCA9IHNldEludGVydmFsKGNhbGxiYWNrLCBpbnRlcnZhbCk7CiAgICAgIH0sCiAgICAgIHN0b3A6ICgpID0+IHsKICAgICAgICBpZiAoIWlkKSByZXR1cm47CiAgICAgICAgY2xlYXJJbnRlcnZhbChpZCk7CiAgICAgICAgaWQgPSB1bmRlZmluZWQ7CiAgICAgIH0sCiAgICB9OwogIH07CiAgY29uc3QgUXVldWUgPSAodGFzaywgaW50ZXJ2YWwpID0+IHsKICAgIGNvbnN0IHNldCA9IG5ldyBTZXQoKTsKICAgIGxldCB0aW1lciA9IFRpbWVyKCgpID0+IHsKICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIHNldCkgewogICAgICAgIHRhc2soZWxlbWVudCk7CiAgICAgICAgc2V0LmRlbGV0ZShlbGVtZW50KTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgICBpZiAoc2V0LnNpemUgPT0gMCkgdGltZXIuc3RvcCgpOwogICAgfSwgaW50ZXJ2YWwpOwogICAgcmV0dXJuIHsKICAgICAgYWRkOiAoZWxlbWVudCkgPT4gewogICAgICAgIHNldC5hZGQoZWxlbWVudCk7CiAgICAgICAgdGltZXIuc3RhcnQoKTsKICAgICAgfSwKICAgICAgcmVtb3ZlOiAoZWxlbWVudCkgPT4gc2V0LmRlbGV0ZShlbGVtZW50KSwKICAgIH07CiAgfTsKICBsZXQgdW5vYnNlcnZlRWRpdG9yaWFsTGluayA9IHVuZGVmaW5lZDsKICBjb25zdCBxdWV1ZSA9IFF1ZXVlKGFzeW5jIChsaW5rKSA9PiB7CiAgICBhd2FpdCBsb2FkRWRpdG9yaWFsKGxpbmspCiAgICAgIC5jYXRjaChleCA9PiBjb25zb2xlLndhcm4oYPCfkLsgU29tZXRoaW5nIHdyb25nOiAiJHtsaW5rLmhyZWZ9IiwgJHtleH1gKSk7CiAgICB1bm9ic2VydmVFZGl0b3JpYWxMaW5rKGxpbmspOwogIH0sIDIwMCk7CiAgY29uc3QgaW50ZXJzZWN0aW9uQ2FsbGJhY2sgPSBhc3luYyAoZW50cmllcykgPT4gewogICAgZm9yIChjb25zdCBlbnRyeSBvZiBlbnRyaWVzKSB7CiAgICAgIGlmIChlbnRyeS5pc0ludGVyc2VjdGluZykgcXVldWUuYWRkKGVudHJ5LnRhcmdldCk7CiAgICAgIGVsc2UgcXVldWUucmVtb3ZlKGVudHJ5LnRhcmdldCk7CiAgICB9CiAgfTsKICBjb25zdCBvYnNlcnZlRWRpdG9yaWFsTGlua3MgPSAobGlua3MpID0+IHsKICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGludGVyc2VjdGlvbkNhbGxiYWNrKTsKICAgIHVub2JzZXJ2ZUVkaXRvcmlhbExpbmsgPSAobGluaykgPT4gb2JzZXJ2ZXIudW5vYnNlcnZlKGxpbmspOwogICAgbGlua3MuZm9yRWFjaChlID0+IG9ic2VydmVyLm9ic2VydmUoZSkpOwogIH07CgogIC8vIGluaXRpYWxpemUKICBjb25zdCBpbml0ID0gYXN5bmMgKCkgPT4gewogICAgR01fYWRkU3R5bGUoYAogICAgICBwcmUgY29kZSB7IHRhYi1zaXplOiA0OyB9CiAgICAgICR7ZWRpdG9yaWFsQm9keVF1ZXJ5fSA+IHVsID4gbGkgeyBmb250LXNpemU6IGxhcmdlcjsgfQogICAgICAu8J+Quy1lZGl0b3JpYWwtY29udGVudCB7IG1hcmdpbi10b3A6IDAuM2VtOyBmb250LXNpemU6IHNtYWxsZXI7IH0KICAgIGApOwogICAgYXdhaXQgbG9hZEthVGVYKCk7CiAgICBhd2FpdCBsb2FkUHJldHRpZmllcigpOwogICAgYXdhaXQgbG9hZFRpbWVBZ28oKTsKICB9OwoKICAvLyBtYWluCiAgYXdhaXQgaW5pdCgpOwogIGNvbnN0IGludGVybmFsRWRpdG9yaWFsTGluayA9IChsaW5rKSA9PiBsaW5rLmhyZWYubWF0Y2goL1wvY29udGVzdHNcLy4rXC9lZGl0b3JpYWxcLy8pOwogIGNvbnN0IG5vdFNwb2lsZXIgPSAobGluaykgPT4gIWxpbmsuY2xhc3NMaXN0LmNvbnRhaW5zKCdzcG9pbGVyJyk7CiAgY29uc3QgbGlua3MgPSBbLi4uZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2EnKV0uZmlsdGVyKGludGVybmFsRWRpdG9yaWFsTGluaykuZmlsdGVyKG5vdFNwb2lsZXIpOwogIGlmIChsaW5rcy5sZW5ndGggPiAwKSBvYnNlcnZlRWRpdG9yaWFsTGlua3MobGlua3MpOwoKICBjb25zb2xlLmxvZyhg8J+QuyAiVmlldyBBbGwgRWRpdG9yaWFscyIgaW5pdGlhbGl6ZWQuIPCfkLtgKQp9KSgpOwo=",
      "requires": [
        {
          "meta": {
            "name": "katex.min.js",
            "url": "https://cdn.jsdelivr.net/npm/katex@0.16.2/dist/katex.min.js",
            "ts": 1691983409710,
            "mimetype": "text/javascript"
          },
          "source": ""
        },
        {
          "meta": {
            "name": "auto-render.min.js",
            "url": "https://cdn.jsdelivr.net/npm/katex@0.16.2/dist/contrib/auto-render.min.js",
            "ts": 1691983409713,
            "mimetype": "text/javascript"
          },
          "source": "IWZ1bmN0aW9uKGUsdCl7Im9iamVjdCI9PXR5cGVvZiBleHBvcnRzJiYib2JqZWN0Ij09dHlwZW9mIG1vZHVsZT9tb2R1bGUuZXhwb3J0cz10KHJlcXVpcmUoImthdGV4IikpOiJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFsia2F0ZXgiXSx0KToib2JqZWN0Ij09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5yZW5kZXJNYXRoSW5FbGVtZW50PXQocmVxdWlyZSgia2F0ZXgiKSk6ZS5yZW5kZXJNYXRoSW5FbGVtZW50PXQoZS5rYXRleCl9KCJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsKGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijt2YXIgdD17NzcxOmZ1bmN0aW9uKHQpe3QuZXhwb3J0cz1lfX0scj17fTtmdW5jdGlvbiBuKGUpe3ZhciBpPXJbZV07aWYodm9pZCAwIT09aSlyZXR1cm4gaS5leHBvcnRzO3ZhciBhPXJbZV09e2V4cG9ydHM6e319O3JldHVybiB0W2VdKGEsYS5leHBvcnRzLG4pLGEuZXhwb3J0c31uLm49ZnVuY3Rpb24oZSl7dmFyIHQ9ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIG4uZCh0LHthOnR9KSx0fSxuLmQ9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIHIgaW4gdCluLm8odCxyKSYmIW4ubyhlLHIpJiZPYmplY3QuZGVmaW5lUHJvcGVydHkoZSxyLHtlbnVtZXJhYmxlOiEwLGdldDp0W3JdfSl9LG4ubz1mdW5jdGlvbihlLHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSx0KX07dmFyIGk9e307cmV0dXJuIGZ1bmN0aW9uKCl7bi5kKGkse2RlZmF1bHQ6ZnVuY3Rpb24oKXtyZXR1cm4gc319KTt2YXIgZT1uKDc3MSksdD1uLm4oZSkscj1mdW5jdGlvbihlLHQscil7Zm9yKHZhciBuPXIsaT0wLGE9ZS5sZW5ndGg7bjx0Lmxlbmd0aDspe3ZhciBvPXRbbl07aWYoaTw9MCYmdC5zbGljZShuLG4rYSk9PT1lKXJldHVybiBuOyJcXCI9PT1vP24rKzoieyI9PT1vP2krKzoifSI9PT1vJiZpLS0sbisrfXJldHVybi0xfSxhPS9eXFxiZWdpbnsvLG89ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG4saT1bXSxvPW5ldyBSZWdFeHAoIigiK3QubWFwKChmdW5jdGlvbihlKXtyZXR1cm4gZS5sZWZ0LnJlcGxhY2UoL1stL1xcXiQqKz8uKCl8W1xde31dL2csIlxcJCYiKX0pKS5qb2luKCJ8IikrIikiKTstMSE9PShuPWUuc2VhcmNoKG8pKTspe24+MCYmKGkucHVzaCh7dHlwZToidGV4dCIsZGF0YTplLnNsaWNlKDAsbil9KSxlPWUuc2xpY2UobikpO3ZhciBsPXQuZmluZEluZGV4KChmdW5jdGlvbih0KXtyZXR1cm4gZS5zdGFydHNXaXRoKHQubGVmdCl9KSk7aWYoLTE9PT0obj1yKHRbbF0ucmlnaHQsZSx0W2xdLmxlZnQubGVuZ3RoKSkpYnJlYWs7dmFyIGQ9ZS5zbGljZSgwLG4rdFtsXS5yaWdodC5sZW5ndGgpLHM9YS50ZXN0KGQpP2Q6ZS5zbGljZSh0W2xdLmxlZnQubGVuZ3RoLG4pO2kucHVzaCh7dHlwZToibWF0aCIsZGF0YTpzLHJhd0RhdGE6ZCxkaXNwbGF5OnRbbF0uZGlzcGxheX0pLGU9ZS5zbGljZShuK3RbbF0ucmlnaHQubGVuZ3RoKX1yZXR1cm4iIiE9PWUmJmkucHVzaCh7dHlwZToidGV4dCIsZGF0YTplfSksaX0sbD1mdW5jdGlvbihlLHIpe3ZhciBuPW8oZSxyLmRlbGltaXRlcnMpO2lmKDE9PT1uLmxlbmd0aCYmInRleHQiPT09blswXS50eXBlKXJldHVybiBudWxsO2Zvcih2YXIgaT1kb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksYT0wO2E8bi5sZW5ndGg7YSsrKWlmKCJ0ZXh0Ij09PW5bYV0udHlwZSlpLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG5bYV0uZGF0YSkpO2Vsc2V7dmFyIGw9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpLGQ9blthXS5kYXRhO3IuZGlzcGxheU1vZGU9blthXS5kaXNwbGF5O3RyeXtyLnByZVByb2Nlc3MmJihkPXIucHJlUHJvY2VzcyhkKSksdCgpLnJlbmRlcihkLGwscil9Y2F0Y2goZSl7aWYoIShlIGluc3RhbmNlb2YgdCgpLlBhcnNlRXJyb3IpKXRocm93IGU7ci5lcnJvckNhbGxiYWNrKCJLYVRlWCBhdXRvLXJlbmRlcjogRmFpbGVkIHRvIHBhcnNlIGAiK25bYV0uZGF0YSsiYCB3aXRoICIsZSksaS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuW2FdLnJhd0RhdGEpKTtjb250aW51ZX1pLmFwcGVuZENoaWxkKGwpfXJldHVybiBpfSxkPWZ1bmN0aW9uIGUodCxyKXtmb3IodmFyIG49MDtuPHQuY2hpbGROb2Rlcy5sZW5ndGg7bisrKXt2YXIgaT10LmNoaWxkTm9kZXNbbl07aWYoMz09PWkubm9kZVR5cGUpe2Zvcih2YXIgYT1pLnRleHRDb250ZW50LG89aS5uZXh0U2libGluZyxkPTA7byYmby5ub2RlVHlwZT09PU5vZGUuVEVYVF9OT0RFOylhKz1vLnRleHRDb250ZW50LG89by5uZXh0U2libGluZyxkKys7dmFyIHM9bChhLHIpO2lmKHMpe2Zvcih2YXIgZj0wO2Y8ZDtmKyspaS5uZXh0U2libGluZy5yZW1vdmUoKTtuKz1zLmNoaWxkTm9kZXMubGVuZ3RoLTEsdC5yZXBsYWNlQ2hpbGQocyxpKX1lbHNlIG4rPWR9ZWxzZSAxPT09aS5ub2RlVHlwZSYmZnVuY3Rpb24oKXt2YXIgdD0iICIraS5jbGFzc05hbWUrIiAiOy0xPT09ci5pZ25vcmVkVGFncy5pbmRleE9mKGkubm9kZU5hbWUudG9Mb3dlckNhc2UoKSkmJnIuaWdub3JlZENsYXNzZXMuZXZlcnkoKGZ1bmN0aW9uKGUpe3JldHVybi0xPT09dC5pbmRleE9mKCIgIitlKyIgIil9KSkmJmUoaSxyKX0oKX19LHM9ZnVuY3Rpb24oZSx0KXtpZighZSl0aHJvdyBuZXcgRXJyb3IoIk5vIGVsZW1lbnQgcHJvdmlkZWQgdG8gcmVuZGVyIik7dmFyIHI9e307Zm9yKHZhciBuIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShuKSYmKHJbbl09dFtuXSk7ci5kZWxpbWl0ZXJzPXIuZGVsaW1pdGVyc3x8W3tsZWZ0OiIkJCIscmlnaHQ6IiQkIixkaXNwbGF5OiEwfSx7bGVmdDoiXFwoIixyaWdodDoiXFwpIixkaXNwbGF5OiExfSx7bGVmdDoiXFxiZWdpbntlcXVhdGlvbn0iLHJpZ2h0OiJcXGVuZHtlcXVhdGlvbn0iLGRpc3BsYXk6ITB9LHtsZWZ0OiJcXGJlZ2lue2FsaWdufSIscmlnaHQ6IlxcZW5ke2FsaWdufSIsZGlzcGxheTohMH0se2xlZnQ6IlxcYmVnaW57YWxpZ25hdH0iLHJpZ2h0OiJcXGVuZHthbGlnbmF0fSIsZGlzcGxheTohMH0se2xlZnQ6IlxcYmVnaW57Z2F0aGVyfSIscmlnaHQ6IlxcZW5ke2dhdGhlcn0iLGRpc3BsYXk6ITB9LHtsZWZ0OiJcXGJlZ2lue0NEfSIscmlnaHQ6IlxcZW5ke0NEfSIsZGlzcGxheTohMH0se2xlZnQ6IlxcWyIscmlnaHQ6IlxcXSIsZGlzcGxheTohMH1dLHIuaWdub3JlZFRhZ3M9ci5pZ25vcmVkVGFnc3x8WyJzY3JpcHQiLCJub3NjcmlwdCIsInN0eWxlIiwidGV4dGFyZWEiLCJwcmUiLCJjb2RlIiwib3B0aW9uIl0sci5pZ25vcmVkQ2xhc3Nlcz1yLmlnbm9yZWRDbGFzc2VzfHxbXSxyLmVycm9yQ2FsbGJhY2s9ci5lcnJvckNhbGxiYWNrfHxjb25zb2xlLmVycm9yLHIubWFjcm9zPXIubWFjcm9zfHx7fSxkKGUscil9fSgpLGk9aS5kZWZhdWx0fSgpfSkpOw=="
        },
        {
          "meta": {
            "name": "jquery.timeago.min.js",
            "url": "https://cdn.jsdelivr.net/npm/timeago@1.6.7/jquery.timeago.min.js",
            "ts": 1691983409714,
            "mimetype": "text/javascript"
          },
          "source": "LyoqCiAqIE1pbmlmaWVkIGJ5IGpzRGVsaXZyIHVzaW5nIFRlcnNlciB2My4xNC4xLgogKiBPcmlnaW5hbCBmaWxlOiAvbnBtL3RpbWVhZ29AMS42LjcvanF1ZXJ5LnRpbWVhZ28uanMKICogCiAqIERvIE5PVCB1c2UgU1JJIHdpdGggZHluYW1pY2FsbHkgZ2VuZXJhdGVkIGZpbGVzISBNb3JlIGluZm9ybWF0aW9uOiBodHRwczovL3d3dy5qc2RlbGl2ci5jb20vdXNpbmctc3JpLXdpdGgtZHluYW1pYy1maWxlcwogKi8KIWZ1bmN0aW9uKHQpeyJmdW5jdGlvbiI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFsianF1ZXJ5Il0sdCk6Im9iamVjdCI9PXR5cGVvZiBtb2R1bGUmJiJvYmplY3QiPT10eXBlb2YgbW9kdWxlLmV4cG9ydHM/dChyZXF1aXJlKCJqcXVlcnkiKSk6dChqUXVlcnkpfShmdW5jdGlvbih0KXt0LnRpbWVhZ289ZnVuY3Rpb24oZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBEYXRlP24oZSk6bigic3RyaW5nIj09dHlwZW9mIGU/dC50aW1lYWdvLnBhcnNlKGUpOiJudW1iZXIiPT10eXBlb2YgZT9uZXcgRGF0ZShlKTp0LnRpbWVhZ28uZGF0ZXRpbWUoZSkpfTt2YXIgZT10LnRpbWVhZ287dC5leHRlbmQodC50aW1lYWdvLHtzZXR0aW5nczp7cmVmcmVzaE1pbGxpczo2ZTQsYWxsb3dQYXN0OiEwLGFsbG93RnV0dXJlOiExLGxvY2FsZVRpdGxlOiExLGN1dG9mZjowLGF1dG9EaXNwb3NlOiEwLHN0cmluZ3M6e3ByZWZpeEFnbzpudWxsLHByZWZpeEZyb21Ob3c6bnVsbCxzdWZmaXhBZ286ImFnbyIsc3VmZml4RnJvbU5vdzoiZnJvbSBub3ciLGluUGFzdDoiYW55IG1vbWVudCBub3ciLHNlY29uZHM6Imxlc3MgdGhhbiBhIG1pbnV0ZSIsbWludXRlOiJhYm91dCBhIG1pbnV0ZSIsbWludXRlczoiJWQgbWludXRlcyIsaG91cjoiYWJvdXQgYW4gaG91ciIsaG91cnM6ImFib3V0ICVkIGhvdXJzIixkYXk6ImEgZGF5IixkYXlzOiIlZCBkYXlzIixtb250aDoiYWJvdXQgYSBtb250aCIsbW9udGhzOiIlZCBtb250aHMiLHllYXI6ImFib3V0IGEgeWVhciIseWVhcnM6IiVkIHllYXJzIix3b3JkU2VwYXJhdG9yOiIgIixudW1iZXJzOltdfX0saW5Xb3JkczpmdW5jdGlvbihlKXtpZighdGhpcy5zZXR0aW5ncy5hbGxvd1Bhc3QmJiF0aGlzLnNldHRpbmdzLmFsbG93RnV0dXJlKXRocm93InRpbWVhZ28gYWxsb3dQYXN0IGFuZCBhbGxvd0Z1dHVyZSBzZXR0aW5ncyBjYW4gbm90IGJvdGggYmUgc2V0IHRvIGZhbHNlLiI7dmFyIGk9dGhpcy5zZXR0aW5ncy5zdHJpbmdzLGE9aS5wcmVmaXhBZ28sbj1pLnN1ZmZpeEFnbztpZih0aGlzLnNldHRpbmdzLmFsbG93RnV0dXJlJiZlPDAmJihhPWkucHJlZml4RnJvbU5vdyxuPWkuc3VmZml4RnJvbU5vdyksIXRoaXMuc2V0dGluZ3MuYWxsb3dQYXN0JiZlPj0wKXJldHVybiB0aGlzLnNldHRpbmdzLnN0cmluZ3MuaW5QYXN0O3ZhciByPU1hdGguYWJzKGUpLzFlMyxvPXIvNjAscz1vLzYwLHU9cy8yNCxtPXUvMzY1O2Z1bmN0aW9uIGwoYSxuKXt2YXIgcj10LmlzRnVuY3Rpb24oYSk/YShuLGUpOmEsbz1pLm51bWJlcnMmJmkubnVtYmVyc1tuXXx8bjtyZXR1cm4gci5yZXBsYWNlKC8lZC9pLG8pfXZhciBkPXI8NDUmJmwoaS5zZWNvbmRzLE1hdGgucm91bmQocikpfHxyPDkwJiZsKGkubWludXRlLDEpfHxvPDQ1JiZsKGkubWludXRlcyxNYXRoLnJvdW5kKG8pKXx8bzw5MCYmbChpLmhvdXIsMSl8fHM8MjQmJmwoaS5ob3VycyxNYXRoLnJvdW5kKHMpKXx8czw0MiYmbChpLmRheSwxKXx8dTwzMCYmbChpLmRheXMsTWF0aC5yb3VuZCh1KSl8fHU8NDUmJmwoaS5tb250aCwxKXx8dTwzNjUmJmwoaS5tb250aHMsTWF0aC5yb3VuZCh1LzMwKSl8fG08MS41JiZsKGkueWVhciwxKXx8bChpLnllYXJzLE1hdGgucm91bmQobSkpLGg9aS53b3JkU2VwYXJhdG9yfHwiIjtyZXR1cm4gdm9pZCAwPT09aS53b3JkU2VwYXJhdG9yJiYoaD0iICIpLHQudHJpbShbYSxkLG5dLmpvaW4oaCkpfSxwYXJzZTpmdW5jdGlvbihlKXt2YXIgaT10LnRyaW0oZSk7cmV0dXJuIGk9KGk9KGk9KGk9KGk9aS5yZXBsYWNlKC9cLlxkKy8sIiIpKS5yZXBsYWNlKC8tLywiLyIpLnJlcGxhY2UoLy0vLCIvIikpLnJlcGxhY2UoL1QvLCIgIikucmVwbGFjZSgvWi8sIiBVVEMiKSkucmVwbGFjZSgvKFtcK1wtXVxkXGQpXDo/KFxkXGQpLywiICQxJDIiKSkucmVwbGFjZSgvKFtcK1wtXVxkXGQpJC8sIiAkMTAwIiksbmV3IERhdGUoaSl9LGRhdGV0aW1lOmZ1bmN0aW9uKGkpe3ZhciBhPWUuaXNUaW1lKGkpP3QoaSkuYXR0cigiZGF0ZXRpbWUiKTp0KGkpLmF0dHIoInRpdGxlIik7cmV0dXJuIGUucGFyc2UoYSl9LGlzVGltZTpmdW5jdGlvbihlKXtyZXR1cm4idGltZSI9PT10KGUpLmdldCgwKS50YWdOYW1lLnRvTG93ZXJDYXNlKCl9fSk7dmFyIGk9e2luaXQ6ZnVuY3Rpb24oKXtpLmRpc3Bvc2UuY2FsbCh0aGlzKTt2YXIgbj10LnByb3h5KGEsdGhpcyk7bigpO3ZhciByPWUuc2V0dGluZ3M7ci5yZWZyZXNoTWlsbGlzPjAmJih0aGlzLl90aW1lYWdvSW50ZXJ2YWw9c2V0SW50ZXJ2YWwobixyLnJlZnJlc2hNaWxsaXMpKX0sdXBkYXRlOmZ1bmN0aW9uKGkpe3ZhciBuPWkgaW5zdGFuY2VvZiBEYXRlP2k6ZS5wYXJzZShpKTt0KHRoaXMpLmRhdGEoInRpbWVhZ28iLHtkYXRldGltZTpufSksZS5zZXR0aW5ncy5sb2NhbGVUaXRsZSYmdCh0aGlzKS5hdHRyKCJ0aXRsZSIsbi50b0xvY2FsZVN0cmluZygpKSxhLmFwcGx5KHRoaXMpfSx1cGRhdGVGcm9tRE9NOmZ1bmN0aW9uKCl7dCh0aGlzKS5kYXRhKCJ0aW1lYWdvIix7ZGF0ZXRpbWU6ZS5wYXJzZShlLmlzVGltZSh0aGlzKT90KHRoaXMpLmF0dHIoImRhdGV0aW1lIik6dCh0aGlzKS5hdHRyKCJ0aXRsZSIpKX0pLGEuYXBwbHkodGhpcyl9LGRpc3Bvc2U6ZnVuY3Rpb24oKXt0aGlzLl90aW1lYWdvSW50ZXJ2YWwmJih3aW5kb3cuY2xlYXJJbnRlcnZhbCh0aGlzLl90aW1lYWdvSW50ZXJ2YWwpLHRoaXMuX3RpbWVhZ29JbnRlcnZhbD1udWxsKX19O2Z1bmN0aW9uIGEoKXt2YXIgaT1lLnNldHRpbmdzO2lmKGkuYXV0b0Rpc3Bvc2UmJiF0LmNvbnRhaW5zKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0aGlzKSlyZXR1cm4gdCh0aGlzKS50aW1lYWdvKCJkaXNwb3NlIiksdGhpczt2YXIgYT1mdW5jdGlvbihpKXtpZighKGk9dChpKSkuZGF0YSgidGltZWFnbyIpKXtpLmRhdGEoInRpbWVhZ28iLHtkYXRldGltZTplLmRhdGV0aW1lKGkpfSk7dmFyIGE9dC50cmltKGkudGV4dCgpKTtlLnNldHRpbmdzLmxvY2FsZVRpdGxlP2kuYXR0cigidGl0bGUiLGkuZGF0YSgidGltZWFnbyIpLmRhdGV0aW1lLnRvTG9jYWxlU3RyaW5nKCkpOiEoYS5sZW5ndGg+MCl8fGUuaXNUaW1lKGkpJiZpLmF0dHIoInRpdGxlIil8fGkuYXR0cigidGl0bGUiLGEpfXJldHVybiBpLmRhdGEoInRpbWVhZ28iKX0odGhpcyk7cmV0dXJuIGlzTmFOKGEuZGF0ZXRpbWUpfHwoMD09PWkuY3V0b2ZmfHxNYXRoLmFicyhyKGEuZGF0ZXRpbWUpKTxpLmN1dG9mZj90KHRoaXMpLnRleHQobihhLmRhdGV0aW1lKSk6dCh0aGlzKS5hdHRyKCJ0aXRsZSIpLmxlbmd0aD4wJiZ0KHRoaXMpLnRleHQodCh0aGlzKS5hdHRyKCJ0aXRsZSIpKSksdGhpc31mdW5jdGlvbiBuKHQpe3JldHVybiBlLmluV29yZHMocih0KSl9ZnVuY3Rpb24gcih0KXtyZXR1cm4obmV3IERhdGUpLmdldFRpbWUoKS10LmdldFRpbWUoKX10LmZuLnRpbWVhZ289ZnVuY3Rpb24odCxlKXt2YXIgYT10P2lbdF06aS5pbml0O2lmKCFhKXRocm93IG5ldyBFcnJvcigiVW5rbm93biBmdW5jdGlvbiBuYW1lICciK3QrIicgZm9yIHRpbWVhZ28iKTtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7YS5jYWxsKHRoaXMsZSl9KSx0aGlzfSxkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhYmJyIiksZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGltZSIpfSk7Ci8vIyBzb3VyY2VNYXBwaW5nVVJMPS9zbS9hMmRkNWU1NjE1MDlkZDYwYzNiM2Q5Mzg4NTQ1ZmY1NDcwNmQ5NWEzOWRjOGFhNDM5NmM3NTY3MmY5ZTAxNzg4Lm1hcA=="
        }
      ]
    },
    {
      "name": "AtCoder Standings Watcher",
      "options": {
        "check_for_updates": false,
        "comment": null,
        "compat_foreach": false,
        "compat_metadata": false,
        "compat_powerful_this": null,
        "compat_wrappedjsobject": false,
        "compatopts_for_requires": true,
        "noframes": null,
        "override": {
          "merge_connects": true,
          "merge_excludes": true,
          "merge_includes": true,
          "merge_matches": true,
          "orig_connects": [],
          "orig_excludes": [],
          "orig_includes": [],
          "orig_matches": [
            "https://atcoder.jp/contests/*"
          ],
          "orig_noframes": null,
          "orig_run_at": "document-idle",
          "use_blockers": [],
          "use_connects": [],
          "use_excludes": [],
          "use_includes": [],
          "use_matches": []
        },
        "run_at": null,
        "sandbox": null,
        "tab_types": null,
        "unwrap": null,
        "user_modified": null
      },
      "storage": {
        "ts": 1690118438192,
        "data": {}
      },
      "enabled": true,
      "position": 10,
      "file_url": "https://greasyfork.org/scripts/428862-atcoder-standings-watcher/code/AtCoder%20Standings%20Watcher.user.js",
      "uuid": "beeddd2e-f2ab-4f96-b612-103a9a595e36",
      "source": "Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBdENvZGVyIFN0YW5kaW5ncyBXYXRjaGVyCi8vIEBuYW1lOmVuICAgICAgQXRDb2RlciBTdGFuZGluZ3MgV2F0Y2hlcgovLyBAbmFtZXNwYWNlICAgIGh0dHBzOi8vYXRjb2Rlci5qcC8KLy8gQHZlcnNpb24gICAgICAwLjIuOAovLyBAbGljZW5zZSAgICAgIE1JVAovLyBAZGVzY3JpcHRpb24gIOmghuS9jeihqOOCkuWumuacn+eahOOBq+WPluW+l+OBl+OBpuOAgeOBiuawl+OBq+WFpeOCiuOBruS6uuOBruWLleOBjeOCkumAmuefpeOBl+OBvuOBmQovLyBAZGVzY3JpcHRpb246ZW4gV2F0Y2ggc3RhbmRpbmdzIGFuZCBub3RpZnkgeW91ciBmcmllbmRzJyBtb3ZlbWVudHMKLy8gQGF1dGhvciAgICAgICBtYWd1cm9mbHkKLy8gQG1hdGNoICAgICAgICBodHRwczovL2F0Y29kZXIuanAvY29udGVzdHMvKgovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/ZG9tYWluPWF0Y29kZXIuanAKLy8gQGdyYW50ICAgICAgICBHTV9ub3RpZmljYXRpb24KLy8gQGdyYW50ICAgICAgICB1bnNhZmVXaW5kb3cKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CgogICAgLy8g5ZCE56iu6Kit5a6aCiAgICBjb25zdCBMQU5HID0gImphIjsgLy8gImphIiBvciAiZW4iCiAgICBjb25zdCBJTlRFUlZBTCA9IDMwZTM7IC8vIOabtOaWsOmWk+malO+8iOODn+ODquenkuWNmOS9je+8iQogICAgY29uc3QgTk9USUZJQ0FUSU9OX1RJTUVPVVQgPSAxNWUzOyAvLyDpgJrnn6Xjga7ooajnpLrmmYLplpPvvIjjg5/jg6rnp5LljZjkvY3vvIkKICAgIGNvbnN0IE5PVElGSUNBVElPTl9URU1QTEFURVMgPSB7CiAgICAgICAgImphIjogewogICAgICAgICAgICBwZW5hbHR5OiAoe3VzZXIsIHRhc2t9KSA9PiBgJHt1c2VyLmlkfSDjgZXjgpPjgYwgJHt0YXNrLmFzc2lnbm1lbnR9IC0gJHt0YXNrLm5hbWV9IOOBp+ODmuODiuODq+ODhuOCo+OCkuWHuuOBl+OBvuOBl+OBn2AsCiAgICAgICAgICAgIGFjY2VwdGVkOiAoe3VzZXIsIHRhc2ssIHNjb3JlfSkgPT4gYCR7dXNlci5pZH0g44GV44KT44GMICR7dGFzay5hc3NpZ25tZW50fSAtICR7dGFzay5uYW1lfSDjgacgJHtzY29yZX0g54K544KS542y5b6X44GX44CBICR7dXNlci5yYW5rfSDkvY3jgavjgarjgorjgb7jgZfjgZ9gLAogICAgICAgIH0sCiAgICAgICAgImVuIjogewogICAgICAgICAgICBwZW5hbHR5OiAoe3VzZXIsIHRhc2t9KSA9PiBgJHt1c2VyLmlkfSBnb3QgcGVuYWx0eSBhdCAke3Rhc2suYXNzaWdubWVudH0gLSAke3Rhc2submFtZX1gLAogICAgICAgICAgICBhY2NlcHRlZDogKHt1c2VyLCB0YXNrLCBzY29yZX0pID0+IGAke3VzZXIuaWR9IGdvdCAke3Njb3JlfSBwb2ludHMgYXQgJHt0YXNrLmFzc2lnbm1lbnR9IC0gJHt0YXNrLm5hbWV9IGFuZCBiZWNhbWUgJHt1c2VyLnJhbmt9dGhgLAogICAgICAgIH0sCiAgICB9W0xBTkddOwoKICAgIC8vIOWumuaVsAogICAgY29uc3Qgd2F0Y2hpbmdDb250ZXN0ID0gdW5zYWZlV2luZG93LmNvbnRlc3RTY3JlZW5OYW1lOwogICAgY29uc3Qgc3RhbmRpbmdzQVBJID0gYC9jb250ZXN0cy8ke3dhdGNoaW5nQ29udGVzdH0vc3RhbmRpbmdzL2pzb25gOwogICAgY29uc3QgY2hhbm5lbCA9IG5ldyBCcm9hZGNhc3RDaGFubmVsKCJhdGNvZGVyLXN0YW5kaW5ncy13YXRjaGVyIik7CgogICAgLy8g54q25oWLCiAgICBsZXQgbGFzdFVwZGF0ZSA9IDA7IC8vIOacgOW+jOOBq+abtOaWsOOBl+OBn+aZguWIuwogICAgY29uc3Qgd2F0Y2hpbmdVc2VycyA9IHt9OwoKICAgIC8vIOmWouaVsAogICAgYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHsKICAgICAgICBjb25zb2xlLmRpcigoKSA9PiB7fSk7CiAgICAgICAgaWYgKHVuc2FmZVdpbmRvdy5nZXRTZXJ2ZXJUaW1lKCkuaXNBZnRlcih1bnNhZmVXaW5kb3cuZW5kVGltZSkpIHsgLy8g44Kz44Oz44OG44K544OI44GM57WC5LqG44GX44Gm44GE44KLCiAgICAgICAgICAgIGNvbnNvbGUuaW5mbygiQXRDb2RlciBTdGFuZGluZ3MgV2F0Y2hlcjogY29udGVzdCBoYXMgZW5kZWQiKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgY2hhbm5lbC5vbm1lc3NhZ2UgPSAoe2RhdGF9KSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJBdENvZGVyIFN0YW5kaW5ncyBXYXRjaGVyOiByZWNlaXZlOiAiLCBkYXRhKTsKICAgICAgICAgICAgc3dpdGNoIChkYXRhLnR5cGUpIHsKICAgICAgICAgICAgICAgIGNhc2UgInVwZGF0ZSI6CiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEuY29udGVzdCA9PSB3YXRjaGluZ0NvbnRlc3QpIGxhc3RVcGRhdGUgPSBNYXRoLm1heChsYXN0VXBkYXRlLCBkYXRhLnRpbWUpOwogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAidGFzayI6CiAgICAgICAgICAgICAgICAgICAgd2F0Y2hpbmdVc2Vyc1tkYXRhLnVzZXJJZF0udGFza1Jlc3VsdHNbZGF0YS50YXNrSWRdID0gZGF0YS5yZXN1bHQ7CiAgICAgICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICAgICAgfQogICAgICAgIH07CgogICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICB1cGRhdGUoZmFsc2UpOwogICAgICAgICAgICBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpOwogICAgICAgICAgICAgICAgaWYgKG5vdyAtIGxhc3RVcGRhdGUgPD0gSU5URVJWQUwpIHJldHVybjsgLy8gSU5URVJWQUwg5Lul5YaF44Gr5pu05paw44GX44Gm44GE44Gf5aC05ZCI44CB5LuK5Zue44Gv6KaL6YCB44KLCiAgICAgICAgICAgICAgICBsYXN0VXBkYXRlID0gbm93OwogICAgICAgICAgICAgICAgY2hhbm5lbC5wb3N0TWVzc2FnZSh7IHR5cGU6ICJ1cGRhdGUiLCBjb250ZXN0OiB3YXRjaGluZ0NvbnRlc3QsIHRpbWU6IGxhc3RVcGRhdGUgfSk7CiAgICAgICAgICAgICAgICB1cGRhdGUoKS5jYXRjaChlcnJvciA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7CiAgICAgICAgICAgIH0sIElOVEVSVkFMIC8gMik7CiAgICAgICAgfSwgSU5URVJWQUwpOwoKICAgICAgICBjb25zdCBmYXZzID0gYXdhaXQgZ2V0RmF2cygpOwogICAgICAgIGZvciAoY29uc3QgZmF2IG9mIGZhdnMpIHsKICAgICAgICAgICAgd2F0Y2hpbmdVc2Vyc1tmYXZdID0gewogICAgICAgICAgICAgICAgaWQ6IGZhdiwKICAgICAgICAgICAgICAgIHJhbms6IDAsCiAgICAgICAgICAgICAgICB0YXNrUmVzdWx0czoge30sCiAgICAgICAgICAgIH07CiAgICAgICAgfQogICAgfQoKICAgIGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZShub3RpZnlDaGFuZ2VzID0gdHJ1ZSkgewogICAgICAgIGNvbnNvbGUuaW5mbygiQXRDb2RlciBTdGFuZGluZ3MgV2F0Y2hlcjogdXBkYXRlIik7CiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IGdldFN0YW5kaW5nc0RhdGEoKTsKICAgICAgICBjb25zdCB0YXNrcyA9IHt9OwogICAgICAgIGZvciAoY29uc3Qge1Rhc2tTY3JlZW5OYW1lLCBBc3NpZ25tZW50LCBUYXNrTmFtZX0gb2YgZGF0YS5UYXNrSW5mbykgewogICAgICAgICAgICB0YXNrc1tUYXNrU2NyZWVuTmFtZV0gPSB7IGlkOiBUYXNrU2NyZWVuTmFtZSwgYXNzaWdubWVudDogQXNzaWdubWVudCwgbmFtZTogVGFza05hbWUgfTsKICAgICAgICB9CiAgICAgICAgZm9yIChjb25zdCBzdGFuZGluZyBvZiBkYXRhLlN0YW5kaW5nc0RhdGEpIHsKICAgICAgICAgICAgY29uc3QgdXNlcklkID0gc3RhbmRpbmcuVXNlclNjcmVlbk5hbWU7CiAgICAgICAgICAgIGlmICghKHVzZXJJZCBpbiB3YXRjaGluZ1VzZXJzKSkgY29udGludWU7CiAgICAgICAgICAgIGNvbnN0IHVzZXIgPSB3YXRjaGluZ1VzZXJzW3VzZXJJZF07CgogICAgICAgICAgICB1c2VyLnJhbmsgPSBzdGFuZGluZy5SYW5rOwoKICAgICAgICAgICAgZm9yIChjb25zdCB0YXNrIGluIHN0YW5kaW5nLlRhc2tSZXN1bHRzKSB7CiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB1c2VyW3Rhc2tdIHx8ICh1c2VyW3Rhc2tdID0geyBjb3VudDogMCwgcGVuYWx0eTogMCwgc2NvcmU6IDAgfSk7CiAgICAgICAgICAgICAgICBjb25zdCBSZXN1bHQgPSBzdGFuZGluZy5UYXNrUmVzdWx0c1t0YXNrXTsKICAgICAgICAgICAgICAgIGlmIChSZXN1bHQuUGVuYWx0eSA+IHJlc3VsdC5wZW5hbHR5KSB7CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnBlbmFsdHkgPSBSZXN1bHQuUGVuYWx0eTsKICAgICAgICAgICAgICAgICAgICBpZiAobm90aWZ5Q2hhbmdlcykgbm90aWZ5KHsgdXNlciwgdGFzazogdGFza3NbdGFza10sIHR5cGU6ICJwZW5hbHR5IiB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChSZXN1bHQuU2NvcmUgPiByZXN1bHQuc2NvcmUpIHsKICAgICAgICAgICAgICAgICAgICByZXN1bHQuc2NvcmUgPSBSZXN1bHQuU2NvcmU7CiAgICAgICAgICAgICAgICAgICAgaWYgKG5vdGlmeUNoYW5nZXMpIG5vdGlmeSh7IHVzZXIsIHRhc2s6IHRhc2tzW3Rhc2tdLCB0eXBlOiAiYWNjZXB0ZWQiLCBzY29yZTogcmVzdWx0LnNjb3JlIC8gMTAwIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIG5vdGlmeShub3RpZmljYXRpb24pIHsKICAgICAgICBjb25zb2xlLmxvZygiQXRDb2RlciBTdGFuZGluZ3MgV2F0Y2hlcjogbm90aWZpY2F0aW9uOiAiLCBub3RpZmljYXRpb24pOwogICAgICAgIEdNX25vdGlmaWNhdGlvbih7CiAgICAgICAgICAgIHRleHQ6IE5PVElGSUNBVElPTl9URU1QTEFURVNbbm90aWZpY2F0aW9uLnR5cGVdKG5vdGlmaWNhdGlvbiksCiAgICAgICAgICAgIHRpbWVvdXQ6IE5PVElGSUNBVElPTl9USU1FT1VULAogICAgICAgIH0pOwogICAgICAgIGlmIChub3RpZmljYXRpb24udXNlciAmJiBub3RpZmljYXRpb24udGFzayAmJiBub3RpZmljYXRpb24udXNlci50YXNrUmVzdWx0cykgewogICAgICAgICAgICBjaGFubmVsLnBvc3RNZXNzYWdlKHsgdHlwZTogInRhc2siLCB1c2VySWQ6IG5vdGlmaWNhdGlvbi51c2VyLmlkLCB0YXNrSWQ6IG5vdGlmaWNhdGlvbi50YXNrLmlkLCByZXN1bHQ6IG5vdGlmaWNhdGlvbi51c2VyLnRhc2tSZXN1bHRzW25vdGlmaWNhdGlvbi50YXNrLmlkXSB9KTsKICAgICAgICB9CiAgICB9CgogICAgYXN5bmMgZnVuY3Rpb24gZ2V0RmF2cygpIHsKICAgICAgICB3aGlsZSAoIXVuc2FmZVdpbmRvdy5mYXZTZXQpIHsKICAgICAgICAgICAgdW5zYWZlV2luZG93LnJlbG9hZEZhdnMoKTsKICAgICAgICAgICAgYXdhaXQgc2xlZXAoMTAwKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHVuc2FmZVdpbmRvdy5mYXZTZXQ7CiAgICB9CgogICAgYXN5bmMgZnVuY3Rpb24gZ2V0U3RhbmRpbmdzRGF0YSgpIHsKICAgICAgICByZXR1cm4gYXdhaXQgZmV0Y2goc3RhbmRpbmdzQVBJKS50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSk7CiAgICB9CgogICAgY29uc3Qgc2xlZXAgPSAobXMpID0+IG5ldyBQcm9taXNlKGRvbmUgPT4gc2V0SW50ZXJ2YWwoZG9uZSwgbXMpKTsKCiAgICAvLyDliJ3mnJ/ljJYKICAgIGluaXRpYWxpemUoKTsKfSkoKTs="
    }
  ]
}